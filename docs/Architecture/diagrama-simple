CrowdKnock/
└── backend/
    ├── src/
    │   ├── config/                        # Configuración de entorno y base de datos
    │   │   ├── db.js
    │   │   └── env.js

    │   ├── controllers/                  # Lógica de cada módulo (consume servicios)
    │   │   ├── auth.controller.js
    │   │   ├── content.controller.js
    │   │   ├── metricsController.js
    │   │   ├── moderation.controller.js
    │   │   ├── payments.controller.js
    │   │   ├── reports.controller.js
    │   │   ├── settings.controller.js
    │   │   ├── system.controller.js
    │   │   ├── system_status.controller.ts
    │   │   └── users.controller.js

    │   ├── middlewares/                  # Middleware de auth, permisos y errores
    │   │   ├── auth.js
    │   │   ├── authMiddleware.js
    │   │   ├── errorHandler.js
    │   │   └── roleMiddleware.js

    │   ├── models/                       # Modelos de datos (PostgreSQL)
    │   │   ├── Challenge.js
    │   │   ├── Content.js
    │   │   ├── Metric.js
    │   │   ├── Payment.js
    │   │   ├── Report.js
    │   │   ├── Setting.js
    │   │   ├── User.js
    │   │   ├── index.js
    │   │   └── systemStatus.model.js

    │   ├── routes/                       # Rutas agrupadas por módulo
    │   │   ├── auth.routes.js
    │   │   ├── challengesRoutes.js
    │   │   ├── content.routes.js
    │   │   ├── metricsRoutes.js
    │   │   ├── moderation.routes.js
    │   │   ├── payments.routes.js
    │   │   ├── reports.routes.js
    │   │   ├── settings.routes.js
    │   │   ├── system.routes.js
    │   │   ├── system_status.routes.ts
    │   │   ├── users.js
    │   │   └── users.routes.js

    │   ├── services/                     # Lógica de negocio (usada por controllers)
    │   │   ├── content.service.js
    │   │   ├── metrics.service.js
    │   │   ├── payment.service.js
    │   │   ├── report.service.js
    │   │   ├── systemStatus.service.js
    │   │   ├── system_status.service.ts
    │   │   └── user.service.js

    │   ├── utils/                        # Funciones utilitarias comunes
    │   │   ├── email.js
    │   │   ├── jwt.js
    │   │   ├── token.js
    │   │   └── validation.js

    │   ├── app.js                        # Configuración central de la app
    │   ├── index.js                      # Entrada base (puede redirigir a server.js)
    │   └── server.js                     # Inicializa servidor y aplica middlewares

    ├── db/                               # Inicialización y seed de la base de datos
    │   ├── init.js
    │   ├── init.sql
    │   ├── seed.js
    │   ├── seed.sql

    ├── scripts/                          # CLI scripts para entorno y migraciones
    │   ├── createTestDb.js
    │   ├── init.sql
    │   ├── migrate.js
    │   ├── reset.js
    │   ├── resetTestDb.js
    │   ├── seed.js
    │   ├── seed.sql
    │   └── syncModels.js

    ├── tests/                            # Pruebas unitarias por módulo
    │   ├── auth.test.js
    │   ├── challenges.test.js
    │   ├── content.test.js
    │   ├── dashboard.test.js
    │   ├── metrics.test.js
    │   ├── moderation.test.js
    │   ├── payments.test.js
    │   ├── reports.test.js
    │   ├── settings.test.js
    │   ├── system-status.test.js
    │   ├── users.test.js
    │   └── setup.js

    ├── .env                              # Variables de entorno principal
    ├── .env.test                         # Variables de entorno para testing
    ├── .env.example                      # Plantilla de entorno

    ├── README.md                         # Documentación general del backend
    ├── jest.config.js                    # Configuración de Jest
    ├── jest.global-setup.js
    ├── jest.setup.js
    ├── package.json



CrowdKnock/
frontend-app/
├── lib/
│   ├── app.dart                              # Configuración global de la app
│   ├── main.dart                             # Punto de entrada principal
│
│   ├── config/                               # Configuración del entorno y rutas
│   │   ├── env.dart                          # Variables de entorno
│   │   ├── router.dart                       # Config global de rutas (GoRouter)
│   │   └── theme.dart                        # Tema de la aplicación
│
│   ├── core/                                 # Base común reutilizable
│   │   ├── constants.dart                    # Constantes generales
│   │   ├── middleware/
│   │   │   └── auth_guard.dart               # Middleware de protección con JWT
│   │   ├── models/
│   │   │   └── auth_user.dart                # Modelo base de usuario autenticado
│   │   ├── providers/
│   │   │   └── auth_provider.dart            # Provider de autenticación
│   │   ├── services/
│   │   │   ├── api_service.dart              # Abstracción HTTP
│   │   │   └── auth_service.dart             # Lógica de autenticación
│   │   ├── utils/
│   │   │   └── 123                           # (A completar según funciones)
│   │   └── widgets/                          # Widgets reutilizables globales
│   │       ├── admin_app_bar.dart
│   │       ├── admin_scaffold.dart
│   │       ├── custom_button.dart
│   │       ├── custom_text_field.dart
│   │       ├── loading_indicator.dart
│   │       └── primary_button.dart
│
│   ├── data/                                 # Modelos y lógica de acceso a datos
│   │   ├── models/
│   │   │   ├── report.dart
│   │   │   ├── report_model.dart
│   │   │   └── user_model.dart
│   │   ├── providers/
│   │   │   └── user_provider.dart
│   │   └── repositories/
│   │       ├── content_repository.dart
│   │       ├── moderation_repository.dart
│   │       └── report_repository.dart
│
│   ├── features/                             # Módulos funcionales
│   │   ├── admin_panel/                      # En desarrollo o interno
│   │   │   └── 123
│   │   ├── auth/
│   │   │   ├── auth_controller.dart
│   │   │   ├── login_screen.dart             # (duplicado, puede eliminarse)
│   │   │   ├── register_screen.dart
│   │   │   └── ui/
│   │   │       ├── forgot_password_screen.dart
│   │   │       ├── login_screen.dart
│   │   │       └── reset_password_screen.dart
│   │   ├── challenges/
│   │   │   ├── challenge_detail.dart
│   │   │   └── challenge_list.dart
│   │   ├── dashboard/
│   │   │   └── data/
│   │   │       └── dashboard_repository.dart
│   │   ├── manage_content/
│   │   │   ├── models/
│   │   │   │   └── content_model.dart
│   │   │   ├── ui/
│   │   │   │   └── manage_content_screen.dart
│   │   │   └── widgets/
│   │   │       ├── content_filters.dart
│   │   │       ├── content_row_actions.dart
│   │   │       ├── content_table.dart
│   │   │       ├── edit_content_dialog.dart
│   │   │       └── upload_content_dialog.dart
│   │   ├── metrics/
│   │   │   └── ui/
│   │   │       └── app_metrics_screen.dart
│   │   ├── moderation/
│   │   │   ├── ui/
│   │   │   │   └── moderation_screen.dart
│   │   │   └── widgets/
│   │   │       ├── moderation_filters.dart
│   │   │       └── moderation_table.dart
│   │   ├── payments/
│   │   │   ├── models/
│   │   │   │   └── payment_model.dart
│   │   │   ├── services/
│   │   │   │   └── payments_service.dart
│   │   │   ├── ui/
│   │   │   │   └── payments_screen.dart
│   │   │   └── widgets/
│   │   │       └── payments_table.dart
│   │   ├── polls/
│   │   │   └── 123
│   │   ├── profile/
│   │   │   └── ui/
│   │   │       ├── change_password_screen.dart
│   │   │       ├── edit_profile_screen.dart
│   │   │       ├── invite_friends_screen.dart     # ✅ Aquí fue reubicada
│   │   │       └── profile_screen.dart
│   │   ├── reports/
│   │   │   ├── data/
│   │   │   │   └── report_repository.dart
│   │   │   ├── models/
│   │   │   │   └── report_model.dart
│   │   │   ├── services/
│   │   │   │   └── reports_service.dart
│   │   │   ├── ui/
│   │   │   │   ├── reports_screen.dart
│   │   │   │   └── submit_report_screen.dart
│   │   │   └── widgets/
│   │   │       ├── report_filters.dart
│   │   │       └── report_table.dart
│   │   ├── setting/
│   │   │   └── 123
│   │   └── system_status/
│   │       ├── models/
│   │       │   └── system_status_model.dart
│   │       ├── services/
│   │       │   └── system_status_service.dart
│   │       └── ui/
│   │           └── system_status_screen.dart
│
│   ├── pages/                                 # Páginas legacy o independientes
│   │   ├── app_metrics_screen.dart            # (migrar a `features/metrics/ui`)
│   │   └── payments_page.dart                 # (migrar a `features/payments/ui`)
│
│   ├── routes/
│   │   └── app_routes.dart                    # Alias a config/router.dart
│
│   ├── theme/                                 # (migrar todo a config/theme.dart)
│   │   └── 123
│
│   ├── widgets/                               # Widgets por categoría específica
│   │   ├── charts/
│   │   │   ├── content_time_chart.dart
│   │   │   ├── devices_used_chart.dart
│   │   │   ├── reports_chart.dart
│   │   │   ├── sessions_chart.dart
│   │   │   ├── user_retention_chart.dart
│   │   │   └── users_chart.dart
│   │   └── payments/
│   │       ├── payments_filters.dart
│   │       └── payments_table.dart
│
│   └── .env                                   # Variables de entorno locales
│
├── assets/
│   ├── icons/
│   │   └── logo.png
│   └── images/
│       └── logo.png
│
├── test/
│   └── widget_tests/
│       └── dashboard_test.dart
│
└── pubspec.yaml


├── frontend-admin/                # Panel web Flutter para administradores
│   ├── lib/
│   │   ├── main.dart              # Entry point
│   │   ├── app.dart               # Temas y rutas
│   │   ├── core/                  # Shared widgets, layouts, helpers
│   │   ├── pages/
│   │   │   ├── dashboard_page.dart
│   │   │   ├── manage_users_page.dart
│   │   │   ├── manage_content_page.dart
│   │   │   ├── moderation_page.dart
│   │   │   ├── reports_page.dart
│   │   │   ├── payments_page.dart ✅
│   │   │   ├── feedback_page.dart
│   │   │   └── settings_page.dart
│   │   └── routes/
│   ├── assets/
│   └── test/

├── docs/                          # Documentación técnica
│   ├── API.md                     # Endpoints disponibles
│   ├── ARCHITECTURE.md            # Esta estructura
│   └── DEPLOYMENT.md              # Guía de despliegue

├── README.md                      # Descripción general del proyecto
└── LICENSE



// DETALLADO DE:

crowdknock_flutter/frontend-app/  
│
├── lib/
│   ├── main.dart                     # Punto de entrada
│   ├── app.dart                      # Configuración general (temas, rutas)
│   ├── core/                         # Componentes compartidos
│   │   ├── constants/                # Constantes globales (colores, strings, assets)
│   │   ├── widgets/                  # Widgets reutilizables (botones, cards)
│   │   ├── utils/                    # Funciones de ayuda (formatos, validaciones)
│   │   └── services/                 # Servicios generales (API, auth, notificaciones)
│   │
│   ├── config/                       # Configs específicas por entorno (dev/prod)
│   │   └── env.dart
│   │
│   ├── data/                         # Acceso a datos
│   │   ├── models/                   # Modelos (User, Challenge, Reporte, etc)
│   │   ├── repositories/             # Lógica de obtención (API, local storage)
│   │   └── providers/                # Providers (Firebase, REST, etc)
│   │
│   ├── features/                     # Módulos del sistema (por dominio)
│   │   ├── auth/                     # Login, registro, auth JWT
│   │   ├── dashboard/                # Pantalla principal del usuario
│   │   ├── challenges/               # Subir/ver desafíos (audio, video, minijuegos)
│   │   ├── polls/                    # Crear/ver encuestas
│   │   ├── reports/                  # Ver denuncias
│   │   ├── admin_panel/              # Panel administrativo (analytics, users, etc)
│   │   └── settings/                 # Ajustes de cuenta, tema, idioma
│   │
│   └── routes/                       # Sistema de navegación centralizado
│       └── app_router.dart
│
├── assets/                          # Imágenes, iconos, fuentes
│
├── test/                            # Pruebas unitarias y widget tests
│
└── pubspec.yaml                     # Dependencias y configuración del proyecto

